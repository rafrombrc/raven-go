// Automatically generated by MockGen. DO NOT EDIT!
// Source: raven.go

package raven

import (
	http "net/http"
	gomock "code.google.com/p/gomock/gomock"
	time "time"
)

// Mock of SentryTransport interface
type MockSentryTransport struct {
	ctrl     *gomock.Controller
	recorder *_MockSentryTransportRecorder
}

// Recorder for MockSentryTransport (not exported)
type _MockSentryTransportRecorder struct {
	mock *MockSentryTransport
}

func NewMockSentryTransport(ctrl *gomock.Controller) *MockSentryTransport {
	mock := &MockSentryTransport{ctrl: ctrl}
	mock.recorder = &_MockSentryTransportRecorder{mock}
	return mock
}

func (_m *MockSentryTransport) EXPECT() *_MockSentryTransportRecorder {
	return _m.recorder
}

func (_m *MockSentryTransport) Send(packet []byte, timestamp time.Time) (string, error) {
	ret := _m.ctrl.Call(_m, "Send", packet, timestamp)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSentryTransportRecorder) Send(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0, arg1)
}

// Mock of HttpClient interface
type MockHttpClient struct {
	ctrl     *gomock.Controller
	recorder *_MockHttpClientRecorder
}

// Recorder for MockHttpClient (not exported)
type _MockHttpClientRecorder struct {
	mock *MockHttpClient
}

func NewMockHttpClient(ctrl *gomock.Controller) *MockHttpClient {
	mock := &MockHttpClient{ctrl: ctrl}
	mock.recorder = &_MockHttpClientRecorder{mock}
	return mock
}

func (_m *MockHttpClient) EXPECT() *_MockHttpClientRecorder {
	return _m.recorder
}

func (_m *MockHttpClient) Do(req *http.Request) (*http.Response, error) {
	ret := _m.ctrl.Call(_m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHttpClientRecorder) Do(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Do", arg0)
}
